{"version":3,"sources":["../../src/utils/set-criteria.js"],"names":["ERROR_INFO","module","action","app","builder","params","reject","or","and","where","addWhere","andWhere","forEach","orWhere","obj","setWhere","keys","Object","property","value","key","criteriaCallback","toLowerCase"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,MAAMA,aAAa,EAAEC,QAAQ,OAAV,EAAmBC,QAAQ,cAA3B,EAAnB;;kBAEe,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,EAAuBC,MAAvB,KAAkC;AAAA,mBACnBD,MADmB,CACvCE,EADuC;;AAAA,QACvCA,EADuC,8BAClC,EADkC;AAAA,QAC3BC,GAD2B,4BACnBH,MADmB;;AAG/C,SAAOD,QACJK,KADI,CACEC,SAASF,GAAT,CADF,EAEJG,QAFI,CAEK,YAAW;AACnB,UAAMP,UAAU,IAAhB;AACAG,OAAGK,OAAH,CAAWP,UAAUD,QAAQS,OAAR,CAAgBH,SAASL,MAAT,CAAhB,CAArB;AACD,GALI,CAAP;;AAOA,WAASK,QAAT,CAAkBI,GAAlB,EAAuB;AACrB,WAAO,YAAY;AACjB,YAAMV,UAAU,IAAhB;AACAW,eAASZ,GAAT,EAAcC,OAAd,EAAuBU,GAAvB,EAA4BR,MAA5B;AACD,KAHD;AAID;AACF,C;;AAED,SAASS,QAAT,CAAkBZ,GAAlB,EAAuBC,OAAvB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgD;AAC9C,QAAMU,OAAOC,OAAOD,IAAP,CAAYX,MAAZ,CAAb;;AAEA,OAAI,IAAIa,QAAR,IAAoBF,IAApB,EAA0B;AACxB,UAAMG,QAAQd,OAAQa,QAAR,CAAd;;AAEA,QAAI,sBAAcC,KAAd,CAAJ,EAA0B;AACxBF,aACGD,IADH,CACQG,KADR,EAEGP,OAFH,CAEWQ,OAAO;AACd,cAAMC,mBAAmB,mBAAUD,IAAIE,WAAJ,EAAV,CAAzB;;AAEA,YAAI,sBAAWD,gBAAX,CAAJ,EAAkC;AAChCjB,oBAAUiB,iBAAiBjB,OAAjB,EAA0Bc,QAA1B,EAAoCC,MAAOC,GAAP,CAApC,CAAV;AACD;AACF,OARH;AASD,KAVD,MAUO;;AAEL,UAAI,CAAC,kCAAmBD,KAAnB,CAAL,EAAgC;AAC9Bb,eAAO,yCAA0BH,GAA1B,eAAoCH,UAApC,IAAgDkB,QAAhD,EAA0DC,KAA1D,IAAP;AACA;AACD;;AAEDf,gBAAUA,QAAQK,KAAR,CAAcS,QAAd,EAAwBC,KAAxB,CAAV;AACD;AACF;;AAED,SAAOf,OAAP;AACD","file":"set-criteria.js","sourcesContent":["import isPlainObject from 'lodash.isplainobject';\nimport isFunction from 'lodash.isfunction';\nimport criteria from './criteria';\nimport sqlStringProtector from './sql-string-protector';\nimport detectedSqlInjectionError from './../errors/detected-sql-injection-error';\n\nconst ERROR_INFO = { module: 'utils', action: 'set-criteria' };\n\nexport default (app, builder, params, reject) => {\n  const { or = [], ...and } = params;\n\n  return builder\n    .where(addWhere(and))\n    .andWhere(function() {\n      const builder = this;\n      or.forEach(params => builder.orWhere(addWhere(params)));\n    });\n\n  function addWhere(obj) {\n    return function () {\n      const builder = this;\n      setWhere(app, builder, obj, reject);\n    };\n  }\n};\n\nfunction setWhere(app, builder, params, reject) {\n  const keys = Object.keys(params);\n\n  for(let property of keys) {\n    const value = params[ property ];\n\n    if (isPlainObject(value)) {\n      Object\n        .keys(value)\n        .forEach(key => {\n          const criteriaCallback = criteria[ key.toLowerCase() ];\n\n          if (isFunction(criteriaCallback)) {\n            builder = criteriaCallback(builder, property, value[ key ]);\n          }\n        });\n    } else {\n      \n      if (!sqlStringProtector(value)) {\n        reject(detectedSqlInjectionError(app, { ...ERROR_INFO, property, value }));\n        break;\n      }\n\n      builder = builder.where(property, value);\n    }\n  }\n\n  return builder;\n}"]}