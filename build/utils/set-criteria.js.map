{"version":3,"sources":["../../src/utils/set-criteria.js"],"names":["builder","params","reject","or","and","where","addWhere","andWhere","forEach","orWhere","obj","setWhere","keys","Object","property","value","criteriaCallback","key","toLowerCase","code","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe,UAACA,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA6B;AAAA,mBACdD,MADc,CAClCE,EADkC;AAAA,MAClCA,EADkC,8BAC7B,EAD6B;AAAA,MACtBC,GADsB,4BACdH,MADc;;AAG1C,SAAOD,QACJK,KADI,CACEC,SAASF,GAAT,CADF,EAEJG,QAFI,CAEK,YAAW;AACnB,QAAMP,UAAU,IAAhB;AACAG,OAAGK,OAAH,CAAW;AAAA,aAAUR,QAAQS,OAAR,CAAgBH,SAASL,MAAT,CAAhB,CAAV;AAAA,KAAX;AACD,GALI,CAAP;;AAOA,WAASK,QAAT,CAAkBI,GAAlB,EAAuB;AACrB,WAAO,YAAY;AACjB,UAAMV,UAAU,IAAhB;AACAW,eAASX,OAAT,EAAkBU,GAAlB,EAAuBR,MAAvB;AACD,KAHD;AAID;AACF,C;;AAED,SAASS,QAAT,CAAkBX,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACzC,MAAMU,OAAOC,OAAOD,IAAP,CAAYX,MAAZ,CAAb;;AADyC;AAAA;AAAA;;AAAA;AAAA;AAAA,UAGjCa,QAHiC;;AAIvC,UAAMC,QAAQd,OAAQa,QAAR,CAAd;;AAEA,UAAI,sBAAcC,KAAd,CAAJ,EAA0B;AACxBF,eACGD,IADH,CACQG,KADR,EAEGP,OAFH,CAEW,eAAO;AACd,cAAMQ,mBAAmB,mBAAUC,IAAIC,WAAJ,EAAV,CAAzB;;AAEA,cAAI,sBAAWF,gBAAX,CAAJ,EAAkC;AAChChB,sBAAUgB,iBAAiBhB,OAAjB,EAA0Bc,QAA1B,EAAoCC,MAAOE,GAAP,CAApC,CAAV;AACD;AACF,SARH;AASD,OAVD,MAUO;;AAEL,YAAI,CAAC,kCAAmBF,KAAnB,CAAL,EAAgC;AAC9Bb,iBAAO;AACLiB,kBAAS,wBADJ;AAELC,4NAA8DN,QAA9D,WAA8EC,KAA9E,MAFK,EAAP;AAGA;AACD;;AAEDf,kBAAUA,QAAQK,KAAR,CAAcS,QAAd,EAAwBC,KAAxB,CAAV;AACD;AA1BsC;;AAGzC,yBAAoBH,IAApB,8HAA0B;AAAA;;AAAA,4BAmBpB;AAKL;AA3BwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BzC,SAAOZ,OAAP;AACD","file":"set-criteria.js","sourcesContent":["import isPlainObject from 'lodash.isplainobject';\nimport isFunction from 'lodash.isfunction';\nimport criteria from './criteria';\nimport sqlStringProtector from './sql-string-protector';\n\nexport default (builder, params, reject) => {\n  const { or = [], ...and } = params;\n\n  return builder\n    .where(addWhere(and))\n    .andWhere(function() {\n      const builder = this;\n      or.forEach(params => builder.orWhere(addWhere(params)));\n    });\n\n  function addWhere(obj) {\n    return function () {\n      const builder = this;\n      setWhere(builder, obj, reject);\n    };\n  }\n};\n\nfunction setWhere(builder, params, reject) {\n  const keys = Object.keys(params);\n\n  for(let property of keys) {\n    const value = params[ property ];\n\n    if (isPlainObject(value)) {\n      Object\n        .keys(value)\n        .forEach(key => {\n          const criteriaCallback = criteria[ key.toLowerCase() ];\n\n          if (isFunction(criteriaCallback)) {\n            builder = criteriaCallback(builder, property, value[ key ]);\n          }\n        });\n    } else {\n      \n      if (!sqlStringProtector(value)) {\n        reject({\n          code   : 'detected.sql.injection',\n          message: `При запросе обнаружена SQL-Injection в свойстве {${ property }: \"${ value }\"` });\n        break;\n      }\n\n      builder = builder.where(property, value);\n    }\n  }\n\n  return builder;\n}"]}