{"version":3,"sources":["../../src/utils/set-params.js"],"names":["schema","params","reject","keys","Object","result","property","value","code","message","has","valid","validate","error"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAA4B;AACzC,MAAMC,OAAOC,OAAOD,IAAP,CAAYF,MAAZ,CAAb;AACA,MAAMI,SAAS,EAAf;;AAFyC;AAAA;AAAA;;AAAA;AAIzC,yBAAoBF,IAApB,8HAA0B;AAAA,UAAlBG,QAAkB;;AACxB,UAAMC,QAAQN,OAAQK,QAAR,CAAd;;AAEA,UAAI,CAAC,kCAAmBC,KAAnB,CAAL,EAAgC;AAC9BL,eAAO;AACLM,gBAAS,wBADJ;AAELC,0NAA8DH,QAA9D,WAA8EC,KAA9E;AAFK,SAAP;AAIA;AACD;;AAED,UAAI,CAACP,OAAOU,GAAP,CAAWJ,QAAX,CAAL,EAA2B;AACzB;AACD;;AAED,UAAIK,QAAQX,OAAOY,QAAP,CAAgBN,QAAhB,EAA0BC,KAA1B,CAAZ;;AAEA,UAAII,MAAME,KAAV,EAAiB;AACfX,eAAOS,MAAME,KAAb;AACA;AACD;;AAEDR,aAAQC,QAAR,IAAqBK,MAAMJ,KAA3B;AACD;AA3BwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BzC,SAAOF,MAAP;AACD,C","file":"set-params.js","sourcesContent":["import sqlStringProtector from './sql-string-protector';\n\nexport default (schema, params, reject) => {\n  const keys = Object.keys(params);\n  const result = {};\n  \n  for(let property of keys) {\n    const value = params[ property ];\n    \n    if (!sqlStringProtector(value)) {\n      reject({\n        code   : 'detected.sql.injection',\n        message: `При запросе обнаружена SQL-Injection в свойстве {${ property }: \"${ value }\"`\n      });\n      break;\n    }\n\n    if (!schema.has(property)) {\n      continue;\n    }\n    \n    let valid = schema.validate(property, value);\n    \n    if (valid.error) {\n      reject(valid.error);\n      break;\n    }\n    \n    result[ property ] = valid.value;\n  }\n  \n  return result;\n};"]}