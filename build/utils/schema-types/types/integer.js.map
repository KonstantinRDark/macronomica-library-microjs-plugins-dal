{"version":3,"sources":["../../../../src/utils/schema-types/types/integer.js"],"names":["value","schema","schemaValidate","options","Object","create","number","integer","min","max"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACbA,SAAQ,SADK;AAEbC,UAAQ,sBAAQC,cAAR;AAFK,C;;;AAKf,SAASA,cAAT,GAAuD;AAAA,MAA/BC,OAA+B,uEAArBC,OAAOC,MAAP,CAAc,IAAd,CAAqB;;AACrD,MAAMJ,SAAS,cAAIK,MAAJ,GAAaC,OAAb,EAAf;AACA,SAAO,+BAAgBJ,OAAhB,EAAyBF,MAAzB,EAAiC,8CAGtC,yBAAU,EAAEO,2BAAF,EAAoBC,2BAApB,EAAV,CAHsC,CAAjC,CAAP;AAKD","file":"integer.js","sourcesContent":["import Joi from 'joi';\nimport memoize from 'lodash.memoize';\n\nimport { MIN_INTEGER, MAX_INTEGER } from '../utils/constants';\nimport applyValidators from '../utils/apply-validators';\nimport setDefault from '../utils/validators/set-default';\nimport setMinMax from '../utils/validators/set-min-max';\nimport setRequired from '../utils/validators/set-required';\n\nexport default {\n  value : 'integer',\n  schema: memoize(schemaValidate)\n};\n\nfunction schemaValidate(options = Object.create(null)) {\n  const schema = Joi.number().integer();\n  return applyValidators(options, schema, [\n    setDefault,\n    setRequired,\n    setMinMax({ min: MIN_INTEGER, max: MAX_INTEGER })\n  ]);\n}"]}