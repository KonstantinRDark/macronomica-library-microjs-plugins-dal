{"version":3,"sources":["../../src/utils/convert-to-response.js"],"names":["convertToResponse","schema","fields","resultData","constructor","name","result","names","Object","keys","dbName","dbProperties","property","properties","value","type","convertOut","str"],"mappings":";;;;;kBAIwBA,iB;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACxD,SAAOC,cAAc;AACnB,QAAI,sBAAcA,UAAd,KAA6BA,WAAWC,WAAX,CAAuBC,IAAvB,KAAgC,WAAjE,EAA8E;AAC5E,UAAIC,SAAS,EAAb;AACA,UAAIC,QAAQC,OAAOC,IAAP,CAAYN,UAAZ,CAAZ;;AAEA,WAAK,IAAIO,MAAT,IAAmBH,KAAnB,EAA0B;AACxB,YAAIF,OAAOJ,OAAOU,YAAP,CAAqBD,MAArB,EAA8BL,IAAzC;AACA,YAAIO,WAAWX,OAAOY,UAAP,CAAmBR,IAAnB,CAAf;AACA,YAAIS,QAAQX,WAAYO,MAAZ,CAAZ;;AAEA,YAAI,gBAAgBE,SAASG,IAA7B,EAAmC;AACjCD,kBAAQF,SAASG,IAAT,CAAcC,UAAd,CAAyBF,KAAzB,EAAgCF,QAAhC,CAAR;AACD;;AAEDN,iBAAS,oBAAIW,GAAJ,CAAQZ,IAAR,EAAcS,KAAd,EAAqBR,MAArB,CAAT;AACD;;AAED,aAAOA,MAAP;AACD,KAjBD,MAiBO;AACL,UAAIA,SAAS,EAAb;AACA;AACA,UAAII,SAASR,OAAQ,CAAR,CAAb;AACA,UAAIY,QAAQX,WAAY,CAAZ,KAAmBA,UAA/B;AACA,UAAIE,OAAOJ,OAAOU,YAAP,CAAqBD,MAArB,EAA8BL,IAAzC;AACA,UAAIO,WAAWX,OAAOY,UAAP,CAAmBR,IAAnB,CAAf;;AAEA,UAAI,gBAAgBO,SAASG,IAA7B,EAAmC;AACjCD,gBAAQF,SAASG,IAAT,CAAcC,UAAd,CAAyBF,KAAzB,EAAgCF,QAAhC,CAAR;AACD;;AAEDN,eAAS,oBAAIW,GAAJ,CAAQZ,IAAR,EAAcS,KAAd,EAAqBR,MAArB,CAAT;AACA,aAAOA,MAAP;AACD;AACF,GAjCD;AAkCD","file":"convert-to-response.js","sourcesContent":["import dot from 'dot-object';\nimport isPlainObject from 'lodash.isplainobject';\nimport checkConvertOut from './check-convert-out';\n\nexport default function convertToResponse(schema, fields) {\n  return resultData => {\n    if (isPlainObject(resultData) || resultData.constructor.name === 'anonymous') {\n      let result = {};\n      let names = Object.keys(resultData);\n\n      for (let dbName of names) {\n        let name = schema.dbProperties[ dbName ].name;\n        let property = schema.properties[ name ];\n        let value = resultData[ dbName ];\n\n        if ('convertOut' in property.type) {\n          value = property.type.convertOut(value, property);\n        }\n\n        result = dot.str(name, value, result);\n      }\n\n      return result;\n    } else {\n      let result = {};\n      // Берем первое указанное имя в fields, по идее оно там одно\n      let dbName = fields[ 0 ];\n      let value = resultData[ 0 ] || resultData;\n      let name = schema.dbProperties[ dbName ].name;\n      let property = schema.properties[ name ];\n      \n      if ('convertOut' in property.type) {\n        value = property.type.convertOut(value, property);\n      }\n\n      result = dot.str(name, value, result);\n      return result;\n    }\n  };\n}"]}