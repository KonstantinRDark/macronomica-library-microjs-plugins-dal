{"version":3,"sources":["../../src/utils/convert-to-response.js"],"names":["convertToResponse","schema","fields","convertOuts","properties","resultData","constructor","name","result","names","Object","keys","dbName","dbProperties","value","callback","str","key"],"mappings":";;;;;kBAIwBA,iB;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACxD,QAAMC,cAAc,+BAAgBF,OAAOG,UAAvB,CAApB;;AAEA,SAAOC,cAAc;AACnB,QAAI,sBAAcA,UAAd,KAA6BA,WAAWC,WAAX,CAAuBC,IAAvB,KAAgC,WAAjE,EAA8E;AAC5E,UAAIC,SAAS,EAAb;AACA,UAAIC,QAAQC,OAAOC,IAAP,CAAYN,UAAZ,CAAZ;;AAEA,WAAK,IAAIO,MAAT,IAAmBH,KAAnB,EAA0B;AACxB,YAAIF,OAAON,OAAOY,YAAP,CAAqBD,MAArB,EAA8BL,IAAzC;AACA,YAAIO,QAAQT,WAAYO,MAAZ,CAAZ;;AAEA,YAAIA,UAAUT,WAAd,EAA2B;AACzBW,kBAAQC,SAASD,KAAT,EAAgBb,OAAOG,UAAP,CAAmBG,IAAnB,CAAhB,CAAR;AACD;;AAEDC,iBAAS,oBAAIQ,GAAJ,CAAQT,IAAR,EAAcO,KAAd,EAAqBN,MAArB,CAAT;AACD;;AAED,aAAOA,MAAP;AACD,KAhBD,MAgBO;AACL,UAAIA,SAAS,EAAb;AACA;AACA,UAAIS,MAAMf,OAAQ,CAAR,CAAV;AACA,UAAIY,QAAQT,WAAY,CAAZ,KAAmBA,UAA/B;;AAEA,UAAIY,OAAOd,WAAX,EAAwB;AACtBW,gBAAQC,SAASD,KAAT,EAAgBb,OAAOY,YAAP,CAAqBI,GAArB,EAA2BV,IAA3C,CAAR;AACD;;AAEDC,eAAS,oBAAIQ,GAAJ,CAAQC,GAAR,EAAaH,KAAb,EAAoBN,MAApB,CAAT;AACA,aAAOA,MAAP;AACD;AACF,GA9BD;AA+BD","file":"convert-to-response.js","sourcesContent":["import dot from 'dot-object';\nimport isPlainObject from 'lodash.isplainobject';\nimport checkConvertOut from './check-convert-out';\n\nexport default function convertToResponse(schema, fields) {\n  const convertOuts = checkConvertOut(schema.properties);\n\n  return resultData => {\n    if (isPlainObject(resultData) || resultData.constructor.name === 'anonymous') {\n      let result = {};\n      let names = Object.keys(resultData);\n\n      for (let dbName of names) {\n        let name = schema.dbProperties[ dbName ].name;\n        let value = resultData[ dbName ];\n\n        if (dbName in convertOuts) {\n          value = callback(value, schema.properties[ name ]);\n        }\n\n        result = dot.str(name, value, result);\n      }\n\n      return result;\n    } else {\n      let result = {};\n      // Берем первое указанное имя в fields, по идее оно там одно\n      let key = fields[ 0 ];\n      let value = resultData[ 0 ] || resultData;\n\n      if (key in convertOuts) {\n        value = callback(value, schema.dbProperties[ key ].name);\n      }\n\n      result = dot.str(key, value, result);\n      return result;\n    }\n  };\n}"]}