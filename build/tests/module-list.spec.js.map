{"version":3,"sources":["../../src/tests/module-list.spec.js"],"names":["should","micro","level","plugins","before","run","then","act","after","end","describe","model","it","result","equal","schema","params","userId","login","Promise","all","exist","be","a","have","property","id","findFull","criteria","not","with","length","options","fields"],"mappings":"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","file":"module-list.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS, schema, createTable } from './constants';\nimport Plugin, {\n  PIN_CONNECTION,\n  PIN_LIST_CREATE,\n  PIN_LIST_UPDATE,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST,\n  PIN_LIST_REMOVE\n} from '../index';\n\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS) ]\n});\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n);\nafter(() => micro.end());\n\ndescribe('module-list', function() {\n  let model;\n\n  it('#ping', () => micro\n    .act('cmd:ping')\n    .then(result => should.equal(result, 'pong'))\n  );\n\n  it('#create return { id }', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: { userId: 1, login: 'test' } })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('object'),\n        result.should.have.property('id'),\n        result.id.should.be.a('number')\n      ])\n      .then(() => result)\n    )\n    .then(result => findFull(result.id).then(result => model = result))\n  );\n\n  it('#find-one return { id, userId, login }', () => findFull(model.id)\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.have.property('userId').be.a('number').equal(model.userId),\n      result.should.have.property('login').be.a('string').equal(model.login)\n    ]))\n  );\n\n  it('#find-one return { id }', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.not.have.property('userId'),\n      result.should.not.have.property('login'),\n    ]))\n  );\n\n  it('#find-list return [{ id }]', () => micro\n    .act({ ...PIN_LIST_FIND_LIST, schema })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('array').with.length(1),\n      result[ 0 ].should.be.a('object'),\n      result[ 0 ].should.have.property('id').be.a('number').equal(model.id),\n      result[ 0 ].should.not.have.property('userId'),\n      result[ 0 ].should.not.have.property('login'),\n    ]))\n  );\n\n  it('#update update property login', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login2' },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login2'),\n      result.should.have.property('userId').equal(model.userId),\n    ]).then(() => model = result))\n  );\n\n  it('#update update property login, userId', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login3', userId: 2 },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login3'),\n      result.should.have.property('userId').not.equal(model.userId),\n      result.should.have.property('userId').equal(2),\n    ]).then(() => model = result))\n  );\n\n  it('#remove return { id }', () => micro\n    .act({ ...PIN_LIST_REMOVE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id)\n    ]))\n  );\n\n  it('#find-one should return null', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => should.not.exist(result))\n  );\n\n});\n\nfunction findFull(id) {\n  return micro\n    .act({\n      ...PIN_LIST_FIND_ONE,\n      schema,\n      criteria: { id },\n      options : { fields: [ 'id', 'userId', 'login' ] }\n    });\n}"]}