{"version":3,"sources":["../../src/tests/actions-list.spec.js"],"names":["tableName","should","micro","level","plugins","schema","userId","type","number","unique","description","login","string","max","trim","before","run","then","act","createTable","after","end","describe","model","it","result","equal","params","Promise","all","exist","be","a","have","property","id","findFull","criteria","not","with","length","connection","createTableIfNotExists","table","increments","integer","options","fields"],"mappings":"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","file":"actions-list.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS } from './constants';\nimport Plugin, {\n  Schema,\n  SchemaTypes,\n  PIN_CONNECTION,\n  PIN_LIST_CREATE,\n  PIN_LIST_UPDATE,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST,\n  PIN_LIST_REMOVE\n} from '../index';\n\nconst tableName = 'module-list-db';\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS) ]\n});\n\nconst schema = new Schema('UserInfo', {\n  userId: {\n    type       : SchemaTypes.number,\n    unique     : true,\n    description: 'Идентификатор пользователя'\n  },\n  login: {\n    type       : SchemaTypes.string,\n    max        : 128,\n    trim       : true,\n    unique     : true,\n    description: 'Уникальный логин (email) для входа'\n  },\n}, { tableName });\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n);\nafter(() => micro.end());\n\ndescribe('actions-list', function() {\n  let model;\n\n  it('#ping', () => micro\n    .act('cmd:ping')\n    .then(result => should.equal(result, 'pong'))\n  );\n\n  it('#create return { id }', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: { userId: 1, login: 'test' } })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('object'),\n        result.should.have.property('id'),\n        result.id.should.be.a('number')\n      ])\n      .then(() => result)\n    )\n    .then(result => findFull(result.id).then(result => model = result))\n  );\n\n  it('#find-one return { id, userId, login }', () => findFull(model.id)\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.have.property('userId').be.a('number').equal(model.userId),\n      result.should.have.property('login').be.a('string').equal(model.login)\n    ]))\n  );\n\n  it('#find-one return { id }', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.not.have.property('userId'),\n      result.should.not.have.property('login'),\n    ]))\n  );\n\n  it('#find-list return [{ id }]', () => micro\n    .act({ ...PIN_LIST_FIND_LIST, schema })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('array').with.length(1),\n      result[ 0 ].should.be.a('object'),\n      result[ 0 ].should.have.property('id').be.a('number').equal(model.id),\n      result[ 0 ].should.not.have.property('userId'),\n      result[ 0 ].should.not.have.property('login'),\n    ]))\n  );\n\n  it('#update update property login', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login2' },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login2'),\n      result.should.have.property('userId').equal(model.userId),\n    ]).then(() => model = result))\n  );\n\n  it('#update update property login, userId', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login3', userId: 2 },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login3'),\n      result.should.have.property('userId').not.equal(model.userId),\n      result.should.have.property('userId').equal(2),\n    ]).then(() => model = result))\n  );\n\n  it('#remove return { id }', () => micro\n    .act({ ...PIN_LIST_REMOVE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id)\n    ]))\n  );\n\n  it('#find-one should return null', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => should.not.exist(result))\n  );\n\n});\n\nfunction createTable(connection) {\n  return connection.schema.createTableIfNotExists(tableName, function (table) {\n    table.increments();\n    table.integer('userId');\n    table.string('login');\n    table.unique([ 'userId', 'login' ]);\n  });\n}\n\nfunction findFull(id) {\n  return micro\n    .act({\n      ...PIN_LIST_FIND_ONE,\n      schema,\n      criteria: { id },\n      options : { fields: [ 'id', 'userId', 'login' ] }\n    });\n}"]}