{"version":3,"sources":["../../src/tests/actions-list.spec.js"],"names":["tableName","should","micro","level","plugins","schema","userId","type","number","unique","description","login","string","max","trim","before","run","then","act","createTable","after","dropTable","end","describe","model","it","result","equal","params","customProp","Promise","all","exist","be","a","have","property","id","findFull","with","length","criteria","in","map","not","connection","createTableIfNotExists","table","increments","integer","properties","dbName","dropTableIfExists","options","fields"],"mappings":"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","file":"actions-list.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS, CONNECT_OPTIONS_PG } from './constants';\nimport Plugin, {\n  Schema,\n  SchemaTypes,\n  PIN_CONNECTION,\n  PIN_LIST_CREATE,\n  PIN_LIST_UPDATE,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST,\n  PIN_LIST_REMOVE\n} from '../index';\n\nconst tableName = 'module_list_db';\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS_PG) ]\n});\n\nconst schema = new Schema('UserInfo', {\n  userId: {\n    type       : SchemaTypes.number,\n    unique     : true,\n    description: 'Идентификатор пользователя'\n  },\n  login: {\n    type       : SchemaTypes.string,\n    max        : 128,\n    trim       : true,\n    unique     : true,\n    description: 'Уникальный логин (email) для входа'\n  },\n}, { tableName });\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n);\nafter(() => micro.act(PIN_CONNECTION)\n  .then(dropTable)\n  .then(() => micro.end()));\n\ndescribe('actions-list', function() {\n  let model;\n\n  it('#ping', () => micro\n    .act('cmd:ping')\n    .then(result => should.equal(result, 'pong'))\n  );\n\n  it('#create return { id }', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: {\n      userId    : 1,\n      customProp: true,\n      login     : 'test'\n    } })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('object'),\n        result.should.have.property('id'),\n        result.id.should.be.a('number')\n      ])\n      .then(() => result)\n    )\n    .then(result => findFull(result.id).then(result => model = result))\n  );\n\n  it('#create return [{ id }, { id }]', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: [\n      { userId: 111, login: 'test111' },\n      { userId: 2222, login: 'test2222' }\n    ] })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('array').with.length(2)\n      ])\n      .then(() => result)\n      .then(result => micro.act({\n        ...PIN_LIST_REMOVE, schema,\n        criteria: {\n          id: { in: result.map(model => model.id) }\n        }\n      }))\n    )\n  );\n\n  it('#find-one return { id, userId, login }', () => findFull(model.id)\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.have.property('userId').be.a('number').equal(model.userId),\n      result.should.have.property('login').be.a('string').equal(model.login)\n    ]))\n  );\n\n  it('#find-one return { id }', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.not.have.property('userId'),\n      result.should.not.have.property('login'),\n    ]))\n  );\n\n  it('#find-list return [{ id }]', () => micro\n    .act({ ...PIN_LIST_FIND_LIST, schema })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('array').with.length(1),\n      result[ 0 ].should.be.a('object'),\n      result[ 0 ].should.have.property('id').be.a('number').equal(model.id),\n      result[ 0 ].should.not.have.property('userId'),\n      result[ 0 ].should.not.have.property('login'),\n    ]))\n  );\n\n  it('#update one property login', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login2' },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login2'),\n      result.should.have.property('userId').equal(model.userId),\n    ]).then(() => model = result))\n  );\n\n  it('#update property login, userId', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login3', userId: 2 },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login3'),\n      result.should.have.property('userId').not.equal(model.userId),\n      result.should.have.property('userId').equal(2),\n    ]).then(() => model = result))\n  );\n\n  it('#remove return { id }', () => micro\n    .act({ ...PIN_LIST_REMOVE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result[ 0 ]),\n      result[ 0 ].should.be.a('object'),\n      result[ 0 ].should.have.property('id').be.a('number').equal(model.id)\n    ]))\n  );\n\n  it('#find-one should return null', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => should.not.exist(result))\n  );\n\n});\n\nfunction createTable(connection) {\n  return connection.schema.createTableIfNotExists(schema.tableName, function (table) {\n    table.increments();\n    table.integer(schema.properties[ 'userId' ].dbName);\n    table.string(schema.properties[ 'login' ].dbName);\n    table.unique([\n      schema.properties[ 'userId' ].dbName,\n      schema.properties[ 'login' ].dbName\n    ]);\n  });\n}\n\nfunction dropTable(connection) {\n  return connection.schema.dropTableIfExists(schema.tableName);\n}\n\nfunction findFull(id) {\n  return micro\n    .act({\n      ...PIN_LIST_FIND_ONE,\n      schema,\n      criteria: { id },\n      options : { fields: 'full' }\n    });\n}"]}