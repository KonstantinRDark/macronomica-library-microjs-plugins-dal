{"version":3,"sources":["../../src/tests/actions-tree.spec.js"],"names":["should","micro","level","plugins","tableName","schema","userId","type","number","unique","description","login","string","max","trim","before","run","then","act","createTable","after","end","describe","model","it","result","equal","PIN_LIST_CREATE","params","Promise","all","exist","be","a","have","property","id","findFull","criteria","not","with","length","PIN_LIST_UPDATE","PIN_LIST_REMOVE","connection","createTableIfNotExists","table","increments","integer","options","fields"],"mappings":"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","file":"actions-tree.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS } from './constants';\nimport Plugin, {\n  Schema,\n  SchemaTypes,\n  PIN_CONNECTION,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST,\n  PIN_TREE_CREATE,\n  PIN_TREE_UPDATE,\n  PIN_TREE_FIND_PATH,\n  PIN_TREE_REMOVE\n} from '../index';\n\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS) ]\n});\nconst tableName = 'module-list-db';\n\nconst schema = new Schema('UserInfo', {\n  userId: {\n    type       : SchemaTypes.number,\n    unique     : true,\n    description: 'Идентификатор пользователя'\n  },\n  login: {\n    type       : SchemaTypes.string,\n    max        : 128,\n    trim       : true,\n    unique     : true,\n    description: 'Уникальный логин (email) для входа'\n  },\n}, { tableName });\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n);\nafter(() => micro.end());\n\ndescribe('actions-tree', function() {\n  let model;\n\n  it('#ping', () => micro\n    .act('cmd:ping')\n    .then(result => should.equal(result, 'pong'))\n  );\n\n  it('#create return { id }', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: { userId: 1, login: 'test' } })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('object'),\n        result.should.have.property('id'),\n        result.id.should.be.a('number')\n      ])\n      .then(() => result)\n    )\n    .then(result => findFull(result.id).then(result => model = result))\n  );\n\n  it('#find-one return { id, userId, login }', () => findFull(model.id)\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.have.property('userId').be.a('number').equal(model.userId),\n      result.should.have.property('login').be.a('string').equal(model.login)\n    ]))\n  );\n\n  it('#find-one return { id }', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.not.have.property('userId'),\n      result.should.not.have.property('login'),\n    ]))\n  );\n\n  it('#find-list return [{ id }]', () => micro\n    .act({ ...PIN_LIST_FIND_LIST, schema })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('array').with.length(1),\n      result[ 0 ].should.be.a('object'),\n      result[ 0 ].should.have.property('id').be.a('number').equal(model.id),\n      result[ 0 ].should.not.have.property('userId'),\n      result[ 0 ].should.not.have.property('login'),\n    ]))\n  );\n\n  it('#update update property login', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login2' },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login2'),\n      result.should.have.property('userId').equal(model.userId),\n    ]).then(() => model = result))\n  );\n\n  it('#update update property login, userId', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { login: 'login3', userId: 2 },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').equal(model.id),\n      result.should.have.property('login').not.equal(model.login),\n      result.should.have.property('login').equal('login3'),\n      result.should.have.property('userId').not.equal(model.userId),\n      result.should.have.property('userId').equal(2),\n    ]).then(() => model = result))\n  );\n\n  it('#remove return { id }', () => micro\n    .act({ ...PIN_LIST_REMOVE, schema, criteria: { id: model.id } })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id)\n    ]))\n  );\n\n  it('#find-one should return null', () => micro\n    .act({ ...PIN_LIST_FIND_ONE, schema, criteria: { id: model.id } })\n    .then(result => should.not.exist(result))\n  );\n\n});\n\nfunction createTable(connection) {\n  return connection.schema.createTableIfNotExists(tableName, function (table) {\n    table.increments();\n    table.integer('userId');\n    table.string('login');\n    table.unique([ 'userId', 'login' ]);\n  });\n}\n\nfunction findFull(id) {\n  return micro\n    .act({\n      ...PIN_LIST_FIND_ONE,\n      schema,\n      criteria: { id },\n      options : { fields: [ 'id', 'userId', 'login' ] }\n    });\n}"]}