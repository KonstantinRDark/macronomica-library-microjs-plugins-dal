{"version":3,"sources":["../../src/tests/dot-properties.spec.js"],"names":["tableName","should","micro","level","plugins","schema","type","boolean","default","required","number","description","before","run","then","act","createTable","after","dropTable","end","describe","model","it","result","equal","params","price","nds","dot","property","property1","property2","customProp","all","exist","be","a","have","id","findFull","criteria","not","connection","createTableIfNotExists","table","increments","properties","dbName","integer","dropTableIfExists","options","fields"],"mappings":"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","file":"dot-properties.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS, CONNECT_OPTIONS_PG } from './constants';\nimport Plugin, {\n  Schema,\n  SchemaTypes,\n  PIN_CONNECTION,\n  PIN_LIST_CREATE,\n  PIN_LIST_UPDATE,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST,\n  PIN_LIST_REMOVE\n} from '../index';\n\nconst tableName = 'module_list_dot_db';\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS_PG) ]\n});\n\nconst schema = new Schema('UserInfo', {\n  'price.nds': {\n    type    : SchemaTypes.boolean,\n    default : true,\n    required: true\n  },\n  'dot.property1': {\n    type       : SchemaTypes.number,\n    description: 'Свойство записанное через точку'\n  },\n  'dot.property2': {\n    type       : SchemaTypes.number,\n    description: 'Свойство записанное через точку'\n  }\n}, { tableName });\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n);\nafter(() => micro.act(PIN_CONNECTION)\n  .then(dropTable)\n  .then(() => micro.end()));\n\ndescribe('dot-properties', function() {\n  let model;\n\n  it('#ping', () => micro\n    .act('cmd:ping')\n    .then(result => should.equal(result, 'pong'))\n  );\n\n  it('#create return { id }', () => micro\n    .act({ ...PIN_LIST_CREATE, schema, params: {\n      price     : { nds: true },\n      dot       : { property: 1, property1: 1, property2: 2 },\n      customProp: true,\n    } })\n    .then(result => Promise\n      .all([\n        should.exist(result),\n        result.should.be.a('object'),\n        result.should.have.property('id'),\n        result.id.should.be.a('number')\n      ])\n      .then(() => result)\n    )\n    .then(result => findFull(result.id).then(result => model = result))\n  );\n\n  it('#find-one return { id, dot: { property1, property2 } }', () => findFull(model.id)\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('id').be.a('number').equal(model.id),\n      result.should.have.property('price')\n        .property('nds').be.a('boolean').equal(model.price.nds),\n      result.should.have.property('dot')\n        .property('property1').be.a('number').equal(model.dot.property1),\n      result.should.have.property('dot')\n        .property('property2').be.a('number').equal(model.dot.property2)\n    ]))\n  );\n\n  it('#update update property \"dot.property1\"', () => micro\n    .act({\n      ...PIN_LIST_UPDATE,\n      schema,\n      criteria: { id: model.id },\n      params  : { dot: { property1: 2 }, price: { nds: false } },\n    })\n    .then(() => findFull(model.id))\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('object'),\n      result.should.have.property('price')\n        .property('nds').be.a('boolean').equal(false),\n      result.should.have.property('dot')\n        .property('property1').not.equal(model.dot.property1),\n      result.should.have.property('dot')\n        .property('property1').equal(2),\n    ]).then(() => model = result))\n  );\n\n});\n\nfunction createTable(connection) {\n  return connection.schema.createTableIfNotExists(tableName, function (table) {\n    table.increments();\n    table.boolean(schema.properties[ 'price.nds' ].dbName);\n    table.integer(schema.properties[ 'dot.property1' ].dbName);\n    table.integer(schema.properties[ 'dot.property2' ].dbName);\n  });\n}\n\nfunction dropTable(connection) {\n  return connection.schema.dropTableIfExists(tableName);\n}\n\nfunction findFull(id) {\n  return micro\n    .act({\n      ...PIN_LIST_FIND_ONE,\n      schema,\n      criteria: { id },\n      options : { fields: 'full' }\n    });\n}"]}