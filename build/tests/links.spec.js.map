{"version":3,"sources":["../../src/tests/links.spec.js"],"names":["tableName","should","micro","level","plugins","imageSchema","src","type","string","required","alt","null","ICONS_LINK","one","schema","options","fields","list","userSchema","login","number","link","icons","array","before","run","then","act","createTable","params","img1","img2","img3","img4","icon1","id","icon2","after","dropTable","end","describe","it","all","criteria","validate","user1","user2","checkOne","user","equal","be","a","have","property","checkIcons","checkIcon","icon","length","connection","createTableIfNotExists","table","increments","properties","dbName","integer","dropTableIfExists"],"mappings":"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","file":"links.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_ERROR } from '@microjs/microjs';\nimport { CONNECT_OPTIONS, CONNECT_OPTIONS_PG } from './constants';\nimport Plugin, {\n  Schema,\n  SchemaTypes,\n  PIN_CONNECTION,\n  PIN_LIST_CREATE,\n  PIN_LIST_FIND_ONE,\n  PIN_LIST_FIND_LIST\n} from '../index';\n\nconst tableName = 'module_links_db';\nconst should = chai.should();\nconst micro = Micro({\n  level  : LEVEL_ERROR,\n  plugins: [ Plugin(CONNECT_OPTIONS_PG) ]\n});\n\nconst imageSchema = new Schema('Image', {\n  src: { type: SchemaTypes.string, required: true },\n  alt: { type: SchemaTypes.string, null: true }\n}, { tableName: 'module_links_images' });\n\nconst ICONS_LINK = {\n  one : { ...PIN_LIST_FIND_ONE, schema: imageSchema, options: { fields: 'full' } },\n  // Вызывается при загрузке множества User\n  list: { ...PIN_LIST_FIND_LIST, schema: imageSchema, options: { fields: 'full' } }\n};\n\nconst userSchema = new Schema('User', {\n  login     : { type: SchemaTypes.string, required: true },\n  'icon1.id': {\n    type: SchemaTypes.number,\n    null: true,\n    link: { ...ICONS_LINK }\n  },\n  'icon2.id': {\n    type: SchemaTypes.number,\n    null: true,\n    link: { ...ICONS_LINK }\n  },\n  icons: {\n    type: SchemaTypes.array,\n    null: true,\n    link: { ...ICONS_LINK }\n  }\n}, { tableName: 'module_links_users' });\n\nbefore(() => micro\n  .run()\n  .then(() => micro.act(PIN_CONNECTION))\n  .then(createTable)\n  .then(() => micro\n    .act({ ...PIN_LIST_CREATE, schema: imageSchema, params: [\n      { src: 'http://example.ru/image1.png', alt: 'описание 1' },\n      { src: 'http://example.ru/image2.png', alt: 'описание 2' },\n      { src: 'http://example.ru/image3.png', alt: 'описание 3' },\n      { src: 'http://example.ru/image4.png', alt: 'описание 4' },\n    ] })\n    .then(([ img1, img2, img3, img4 ]) => micro.act({ ...PIN_LIST_CREATE, schema: userSchema, params: [\n      { login: 'user1', icon1: { id: img1.id }, icon2: { id: img2.id }, icons: [ img1.id, img2.id ] },\n      { login: 'user2', icon1: { id: img3.id }, icon2: { id: img4.id }, icons: [ img3.id, img4.id ] },\n    ] }))\n  )\n);\n\nafter(() => micro.act(PIN_CONNECTION)\n  .then(dropTable)\n  .then(() => micro.end()));\n\ndescribe('schema', function() {\n\n  it('#one-link', () => Promise.all([\n      micro.act({ ...PIN_LIST_FIND_ONE,\n        schema  : userSchema,\n        options : { fields: 'full' },\n        criteria: { id: 1 }\n      }),\n      micro.act({ ...PIN_LIST_FIND_ONE,\n        schema  : userSchema,\n        options : { fields: 'full' },\n        criteria: { id: 2 }\n      })\n    ])\n    .then(validate)\n  );\n\n  it('#list-link', () => micro\n    .act({ ...PIN_LIST_FIND_LIST, schema: userSchema, options: { fields: 'full' } })\n    .then(validate)\n  );\n\n  function validate([ user1, user2 ] = []) {\n    return Promise.all([\n      ...checkOne(user1, {\n        id   : 1,\n        login: 'user1',\n        icon1: { id: 1, src: 'http://example.ru/image1.png', alt: 'описание 1' },\n        icon2: { id: 2, src: 'http://example.ru/image2.png', alt: 'описание 2' },\n      }),\n      ...checkOne(user2, {\n        id   : 2,\n        login: 'user2',\n        icon1: { id: 3, src: 'http://example.ru/image3.png', alt: 'описание 3' },\n        icon2: { id: 4, src: 'http://example.ru/image4.png', alt: 'описание 4' },\n      })\n    ]);\n  }\n\n  function checkOne(user, equal) {\n    return [\n      user.should.be.a('object'),\n      user.should.have.property('id').be.a('number').equal(equal.id),\n      user.should.have.property('login').be.a('string').equal(equal.login),\n      ...checkIcons(user.icons, equal),\n      ...checkIcon(user.icon1, equal.icon1),\n      ...checkIcon(user.icon2, equal.icon2)\n    ];\n  }\n\n  function checkIcon(icon, equal) {\n    return [\n      icon.should.be.a('object'),\n      icon.should.have.property('id').be.a('number').equal(equal.id),\n      icon.should.have.property('src').be.a('string').equal(equal.src),\n      icon.should.have.property('alt').be.a('string').equal(equal.alt),\n    ];\n  }\n\n  function checkIcons(icons, equal) {\n    return [\n      icons.should.be.a('array').length(2),\n      ...checkIcon(icons[ 0 ], equal.icon1),\n      ...checkIcon(icons[ 1 ], equal.icon2)\n    ];\n  }\n});\n\n\nfunction createTable(connection) {\n  return Promise.all([\n    connection.schema.createTableIfNotExists(imageSchema.tableName, function (table) {\n      table.increments();\n      table.string(imageSchema.properties[ 'src' ].dbName);\n      table.string(imageSchema.properties[ 'alt' ].dbName);\n    }),\n    connection.schema.createTableIfNotExists(userSchema.tableName, function (table) {\n      table.increments();\n      table.string(userSchema.properties[ 'login' ].dbName);\n      table.integer(userSchema.properties[ 'icon1.id' ].dbName);\n      table.integer(userSchema.properties[ 'icon2.id' ].dbName);\n      table.string(userSchema.properties[ 'icons' ].dbName);\n    })\n  ]);\n}\n\nfunction dropTable(connection) {\n  return Promise.all([\n    connection.schema.dropTableIfExists(imageSchema.tableName),\n    connection.schema.dropTableIfExists(userSchema.tableName),\n  ]);\n}"]}