{"version":3,"sources":["../../../../src/modules/cascade/actions/remove.js"],"names":["cascadeRemove","CascadeRemoveInternalError","message","join","EOL","type","propertyName","request","originalName","required","criteria","pins","errors","removePin","remove","RemoveError","resolve","reject","meta","name","result","log","trace","act","e","error"],"mappings":";;;;;;;;;;;;;;;;;;kBAYwBA,a;;AAZxB;;;;AACA;;;;;;AAEA,MAAMC,6BAA6B,uBAAa;AAC9CC,WAAS,CACP,sDADO,EAEP,wBAFO,EAGPC,IAHO,CAGF,aAAGC,GAHD,CADqC;AAK9CC,QAAc,2CALgC;AAM9CC,gBAAc;AANgC,CAAb,CAAnC;;AASe,SAASN,aAAT,CAAuBO,OAAvB,EAAgC;AAAA,8BAQzCA,OARyC,CAE3CC,YAF2C;AAAA,QAE3CA,YAF2C,yCAE5B,eAF4B;AAAA,8BAQzCD,OARyC,CAG3CD,YAH2C;AAAA,QAG3CA,YAH2C,yCAG5B,eAH4B;AAAA,0BAQzCC,OARyC,CAI3CE,QAJ2C;AAAA,QAI3CA,QAJ2C,qCAIhC,KAJgC;AAAA,QAK3CC,QAL2C,GAQzCH,OARyC,CAK3CG,QAL2C;AAAA,sBAQzCH,OARyC,CAM3CI,IAN2C;AAAA,QAM3CA,IAN2C,iCAMpC,EANoC;AAAA,wBAQzCJ,OARyC,CAO3CK,MAP2C;AAAA,QAO3CA,MAP2C,mCAOlC,EAPkC;AAAA,QAS9BC,SAT8B,GAShBF,IATgB,CASrCG,MATqC;AAAA,QAU9BC,WAV8B,GAUdH,MAVc,CAUrCE,MAVqC;;;AAY7C,SAAO;AAAA,+CAAY,WAAOE,OAAP,EAAgBC,MAAhB,EAA2B;AAC5C,YAAMC,OAAO,EAAEX,SAASA,QAAQA,OAAnB,EAA4BE,QAA5B,EAAsCH,YAAtC,EAAoDE,YAApD,EAAkEE,QAAlE,EAAb;AACA,UAAIS,OAAOX,eAAe,GAAf,GAAqBF,YAAhC;AACA,UAAIc,MAAJ;;AAEA,UAAI;AACF,YAAIP,SAAJ,EAAe;AACbN,kBAAQc,GAAR,CAAYC,KAAZ,CAAmB,uBAAuBH,IAAM,GAAhD,EAAoDD,IAApD;AACAE,mBAAS,MAAMb,QAAQgB,GAAR,4BAAiBV,SAAjB,IAA4BH,QAA5B,IAAf;AACD,SAHD,MAIK;AACHH,kBAAQc,GAAR,CAAaZ,WAAW,MAAX,GAAoB,MAAjC,EACG,oDAAoDU,IAAM,GAD7D,EAEED,IAFF;AAID;AACF,OAXD,CAYA,OAAOM,CAAP,EAAU;AACR,YAAIC,KAAJ;;AAEA,YAAIV,WAAJ,EAAiB;AACfU,kBAAQV,YAAYS,CAAZ,EAAeN,IAAf,CAAR;AACD,SAFD,MAEO;AACLO,kBAAQxB,2BAA2BuB,CAA3B,EAA8BN,IAA9B,CAAR;AACD;;AAEDX,gBAAQc,GAAR,CAAYI,KAAZ,CAAkBA,KAAlB,EAAyBP,IAAzB;;AAEA,YAAIT,QAAJ,EAAc;AACZ,iBAAOQ,OAAOQ,KAAP,CAAP;AACD;AACF;;AAEDT,cAAQI,MAAR;AACD,KAlCM;;AAAA;AAAA;AAAA;AAAA,OAAP;AAmCD","file":"remove.js","sourcesContent":["import os from 'os';\nimport WrappedError from 'error/wrapped';\n\nconst CascadeRemoveInternalError = WrappedError({\n  message: [\n    '{name} - Ошибка каскадного удаления \"{propertyName}\"',\n    '{name} - {origMessage}',\n  ].join(os.EOL),\n  type        : 'micro.plugins.dal.cascade.remove.internal',\n  propertyName: null\n});\n\nexport default function cascadeRemove(request) {\n  const {\n    originalName = 'not.indicated',\n    propertyName = 'not.indicated',\n    required = false,\n    criteria,\n    pins = {},\n    errors = {}\n  } = request;\n  const { remove:removePin } = pins;\n  const { remove:RemoveError } = errors;\n\n  return new Promise(async (resolve, reject) => {\n    const meta = { request: request.request, required, propertyName, originalName, criteria };\n    let name = originalName + '.' + propertyName;\n    let result;\n\n    try {\n      if (removePin) {\n        request.log.trace(`Каскадное удаление \"${ name }\"`, meta);\n        result = await request.act({ ...removePin, criteria });\n      }\n      else {\n        request.log[ required ? 'warn' : 'info' ](\n          `Не передан пин для каскадного удаления свойства \"${ name }\"`,\n          meta\n        );\n      }\n    }\n    catch (e) {\n      let error;\n\n      if (RemoveError) {\n        error = RemoveError(e, meta);\n      } else {\n        error = CascadeRemoveInternalError(e, meta);\n      }\n\n      request.log.error(error, meta);\n\n      if (required) {\n        return reject(error);\n      }\n    }\n\n    resolve(result);\n  });\n};"]}