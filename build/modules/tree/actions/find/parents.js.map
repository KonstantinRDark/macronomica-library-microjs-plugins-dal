{"version":3,"sources":["../../../../../src/modules/tree/actions/find/parents.js"],"names":["buildFindParentsTreeNodes","ERROR_INFO","module","action","app","middleware","plugin","msg","schema","criteria","options","parentId","Promise","reject","toLowerCase","act","catch"],"mappings":";;;;;;;;QAagBA,yB,GAAAA,yB;;AAbhB;;;;AACA;;AACA;;AACA;;;;AAMA,MAAMC,aAAa,EAAEC,8BAAF,EAAuBC,QAAQ,cAA/B,EAAnB;;kBAEe,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,KAA8BC,GAAD,IAASP,0BAA0BI,GAA1B,EAA+BC,UAA/B,EAA2CE,GAA3C,C;;AAE9C,SAASP,yBAAT,CAAmCI,GAAnC,EAAwCC,UAAxC,QAA6F;AAAA,MAAvCG,MAAuC,QAAvCA,MAAuC;AAAA,2BAA/BC,QAA+B;AAAA,MAA/BA,QAA+B,iCAApB,EAAoB;AAAA,0BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,gCAAN,EAAM;AAAA,MAC5FC,QAD4F,GAC/EF,QAD+E,CAC5FE,QAD4F;;;AAGlG,MAAI,CAACH,MAAL,EAAa;AACX,WAAOI,QAAQC,MAAR,CAAe,iCAAoBZ,UAApB,CAAf,CAAP;AACD;;AAED,MAAI,EAAEO,kCAAF,CAAJ,EAAiC;AAC/B,WAAOI,QAAQC,MAAR,CAAe,+CAAkCZ,UAAlC,CAAf,CAAP;AACD;;AAED,MAAI,CAACU,QAAD,IAAaA,aAAa,EAA1B,IAAgCA,SAASG,WAAT,OAA2B,MAA/D,EAAuE;AACrEH,eAAW,IAAX;AACD;;AAED;AACA,SAAOP,IAAIW,GAAJ;AAELP,UAFK;AAGLE,WAHK;AAILD,cAAU,EAAEE,QAAF;AAJL,MAMNK,KANM,CAMA,2BAAcZ,GAAd,EAAmBH,UAAnB,CANA,CAAP;AAOD","file":"parents.js","sourcesContent":["import Schema from './../../../../utils/schema';\nimport { PIN_LIST_FIND_LIST } from '../../../../pins';\nimport { MODULE_NAME } from './../../constants';\nimport {\n  internalError,\n  schemaNotFoundError,\n  schemaNotInstanceSchemaClassError\n} from '../../../../errors';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: 'find-parents' };\n\nexport default (app, middleware, plugin) => (msg) => buildFindParentsTreeNodes(app, middleware, msg);\n\nexport function buildFindParentsTreeNodes(app, middleware, { schema, criteria = {}, options = {} }) {\n  let { parentId } = criteria;\n\n  if (!schema) {\n    return Promise.reject(schemaNotFoundError(ERROR_INFO));\n  }\n\n  if (!(schema instanceof Schema)) {\n    return Promise.reject(schemaNotInstanceSchemaClassError(ERROR_INFO));\n  }\n\n  if (!parentId || parentId === '' || parentId.toLowerCase() === 'null') {\n    parentId = null;\n  }\n\n  // Загружаем себя\n  return app.act({\n    ...PIN_LIST_FIND_LIST,\n    schema,\n    options,\n    criteria: { parentId }\n  })\n  .catch(internalError(app, ERROR_INFO));\n}"]}