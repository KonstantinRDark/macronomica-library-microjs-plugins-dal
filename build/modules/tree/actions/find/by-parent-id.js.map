{"version":3,"sources":["../../../../../src/modules/tree/actions/find/by-parent-id.js"],"names":["buildFindByParentIdTreeNodes","ERROR_INFO","module","action","app","middleware","plugin","msg","schema","criteria","options","parentId","reject","toLowerCase","act","catch"],"mappings":";;;;;;;;;;;;;;QAcgBA,4B,GAAAA,4B;;AAdhB;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAMA,MAAMC,aAAa,EAAEC,8BAAF,EAAuBC,QAAQ,gBAA/B,EAAnB;;kBAEe,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,KAA8BC,GAAD,IAASP,6BAA6BI,GAA7B,EAAkCC,UAAlC,EAA8CE,GAA9C,C;;AAE9C,SAASP,4BAAT,CAAsCI,GAAtC,EAA2CC,UAA3C,QAAgG;AAAA,MAAvCG,MAAuC,QAAvCA,MAAuC;AAAA,2BAA/BC,QAA+B;AAAA,MAA/BA,QAA+B,iCAApB,EAAoB;AAAA,0BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,gCAAN,EAAM;AAAA,MAC/FC,QAD+F,GAClFF,QADkF,CAC/FE,QAD+F;;;AAGrG,MAAI,CAACH,MAAL,EAAa;AACX,WAAO,kBAAQI,MAAR,CAAe,iCAAoBX,UAApB,CAAf,CAAP;AACD;;AAED,MAAI,EAAEO,kCAAF,CAAJ,EAAiC;AAC/B,WAAO,kBAAQI,MAAR,CAAe,+CAAkCX,UAAlC,CAAf,CAAP;AACD;;AAED,MAAI,CAACU,QAAD,IAAaA,aAAa,EAA1B,IAAiC,sBAASA,QAAT,KAAsBA,SAASE,WAAT,OAA2B,MAAtF,EAA+F;AAC7FF,eAAW,IAAX;AACD;;AAED;AACA,SAAOP,IAAIU,GAAJ;AAELN,UAFK;AAGLE,WAHK;AAILD,cAAU,EAAEE,QAAF;AAJL,MAMNI,KANM,CAMA,kCAAqBX,GAArB,EAA0BH,UAA1B,CANA,CAAP;AAOD","file":"by-parent-id.js","sourcesContent":["import isString from 'lodash.isstring';\nimport Schema from './../../../../utils/schema';\nimport { PIN_LIST_FIND_LIST } from '../../../../pins';\nimport { MODULE_NAME } from './../../constants';\nimport {\n  internalErrorPromise,\n  schemaNotFoundError,\n  schemaNotInstanceSchemaClassError\n} from '../../../../errors';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: 'find-parent-id' };\n\nexport default (app, middleware, plugin) => (msg) => buildFindByParentIdTreeNodes(app, middleware, msg);\n\nexport function buildFindByParentIdTreeNodes(app, middleware, { schema, criteria = {}, options = {} }) {\n  let { parentId } = criteria;\n\n  if (!schema) {\n    return Promise.reject(schemaNotFoundError(ERROR_INFO));\n  }\n\n  if (!(schema instanceof Schema)) {\n    return Promise.reject(schemaNotInstanceSchemaClassError(ERROR_INFO));\n  }\n\n  if (!parentId || parentId === '' || (isString(parentId) && parentId.toLowerCase() === 'null')) {\n    parentId = null;\n  }\n\n  // Загружаем себя\n  return app.act({\n    ...PIN_LIST_FIND_LIST,\n    schema,\n    options,\n    criteria: { parentId }\n  })\n  .catch(internalErrorPromise(app, ERROR_INFO));\n}"]}