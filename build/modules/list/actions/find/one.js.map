{"version":3,"sources":["../../../../../src/modules/list/actions/find/one.js"],"names":["buildFindOne","ERROR_INFO","module","action","app","middleware","plugin","msg","schema","criteria","options","transaction","outer","fields","convertOuts","properties","Promise","reject","resolve","getMyParams","builder","tableName","select","getMyFields","limit","then","result","name","callback","catch"],"mappings":";;;;;;;;;;QAegBA,Y,GAAAA,Y;;AAfhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAMA,MAAMC,aAAa,EAAEC,8BAAF,EAAuBC,QAAQ,UAA/B,EAAnB;;kBAEe,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,KAA8BC,GAAD,IAASP,aAAaI,GAAb,EAAkBC,UAAlB,EAA8BE,GAA9B,C;;AAE9C,SAASP,YAAT,CAAsBI,GAAtB,EAA2BC,UAA3B,QAAgF;AAAA,MAAvCG,MAAuC,QAAvCA,MAAuC;AAAA,2BAA/BC,QAA+B;AAAA,MAA/BA,QAA+B,iCAApB,EAAoB;AAAA,0BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,gCAAN,EAAM;AAAA,QAC7EC,WAD6E,GACtCD,OADsC,CAC7EC,WAD6E;AAAA,uBACtCD,OADsC,CAChEE,KADgE;AAAA,QAChEA,KADgE,kCACxD,KADwD;AAAA,QACjDC,MADiD,GACtCH,OADsC,CACjDG,MADiD;;AAErF,QAAMC,cAAc,+BAAgBN,OAAOO,UAAvB,CAApB;;AAEA,MAAI,CAACP,MAAL,EAAa;AACX,WAAOQ,QAAQC,MAAR,CAAe,iCAAoBhB,UAApB,CAAf,CAAP;AACD;;AAED,MAAI,EAAEO,kCAAF,CAAJ,EAAiC;AAC/B,WAAOQ,QAAQC,MAAR,CAAe,+CAAkChB,UAAlC,CAAf,CAAP;AACD;;AAED,SAAO,IAAIe,OAAJ,CAAY,CAACE,OAAD,EAAUD,MAAV,KAAqB;AACtCR,eAAWD,OAAOW,WAAP,CAAmBV,QAAnB,CAAX;;AAEA,QAAI,sBAAQA,QAAR,CAAJ,EAAuB;AACrB,aAAOS,QAAQ,IAAR,CAAP;AACD;;AAED,QAAIE,UAAU,2BAAYhB,GAAZ,EAAiBC,WAAWG,OAAOa,SAAlB,CAAjB,EAA+CZ,QAA/C,EAAyDQ,MAAzD,EACXK,MADW,CACJ,GAAGd,OAAOe,WAAP,CAAmBV,MAAnB,CADC,EAEXW,KAFW,CAEL,CAFK,CAAd;AAGA;;;;;;AAMA,SAAI,mBAAmBZ,KAAvB,EAA8B;AAC5B;AACA,aAAOM,QAAQE,OAAR,CAAP;AACD;;AAED;AACAA,YACGK,IADH,CACQ,WAAgB;AAAA;;AAAA,UAAbC,MAAa;;AACpB,UAAG,CAACA,MAAJ,EAAY;AACVR,gBAAQ,IAAR;AACD;;AAED,wBAA+BJ,WAA/B,EAA4C;AAAA,YAAjCa,IAAiC,SAAjCA,IAAiC;AAAA,YAA3BC,QAA2B,SAA3BA,QAA2B;;AAC1CF,eAAQC,IAAR,IAAiBC,SAASF,OAAQC,IAAR,CAAT,EAAyBnB,OAAOO,UAAP,CAAmBY,IAAnB,CAAzB,CAAjB;AACD;;AAEDT,2BAAaQ,MAAb;AACD,KAXH,EAYGG,KAZH,CAYS,2BAAczB,GAAd,EAAmBH,UAAnB,CAZT,EAaG4B,KAbH,CAaSZ,MAbT;AAcD,GApCM,CAAP;AAqCD","file":"one.js","sourcesContent":["import isEmpty from 'lodash.isempty';\nimport Schema from './../../../../utils/schema';\nimport setCriteria from './../../../../utils/set-criteria';\nimport checkConvertOut from './../../../../utils/check-convert-out';\nimport { MODULE_NAME } from './../../constants';\nimport {\n  internalError,\n  schemaNotFoundError,\n  schemaNotInstanceSchemaClassError\n} from '../../../../errors';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: 'find-one' };\n\nexport default (app, middleware, plugin) => (msg) => buildFindOne(app, middleware, msg);\n\nexport function buildFindOne(app, middleware, { schema, criteria = {}, options = {} }) {\n  const { transaction, outer = false, fields } = options;\n  const convertOuts = checkConvertOut(schema.properties);\n\n  if (!schema) {\n    return Promise.reject(schemaNotFoundError(ERROR_INFO));\n  }\n\n  if (!(schema instanceof Schema)) {\n    return Promise.reject(schemaNotInstanceSchemaClassError(ERROR_INFO));\n  }\n\n  return new Promise((resolve, reject) => {\n    criteria = schema.getMyParams(criteria);\n\n    if (isEmpty(criteria)) {\n      return resolve(null);\n    }\n\n    let builder = setCriteria(app, middleware(schema.tableName), criteria, reject)\n      .select(...schema.getMyFields(fields))\n      .limit(1);\n    /*\n    if (transaction) {\n      // Если передали внешнюю транзакцию - привяжемся к ней\n      builder = builder.transacting(transaction);\n    }\n    */\n    if (/*transaction || */outer) {\n      // Если передали внешнюю транзакцию или кто-то сам хочет запускать запрос - вернем builder\n      return resolve(builder);\n    }\n\n    // Иначе вызовем его выполнение\n    builder\n      .then(([ result ]) => {\n        if(!result) {\n          resolve(null);\n        }\n\n        for (let { name, callback } of convertOuts) {\n          result[ name ] = callback(result[ name ], schema.properties[ name ]);\n        }\n\n        resolve({ ...result });\n      })\n      .catch(internalError(app, ERROR_INFO))\n      .catch(reject);\n  });\n}"]}