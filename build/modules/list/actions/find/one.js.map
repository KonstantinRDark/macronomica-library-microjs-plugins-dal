{"version":3,"sources":["../../../../../src/modules/list/actions/find/one.js"],"names":["buildFindOne","ERROR_INFO","module","action","app","middleware","plugin","msg","schema","criteria","options","transaction","outer","fields","Promise","reject","resolve","__fields","getMyFields","getMyCriteriaParams","builder","tableName","select","limit","then","result","record","loadAndAssignLink","catch","links","properties","keys","length","all","map","propertyName","act","id","pick","link","Object","assign","slice","lastIndexOf"],"mappings":"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","file":"one.js","sourcesContent":["import dot from 'dot-object';\nimport isEmpty from 'lodash.isempty';\nimport Schema from './../../../../utils/schema';\nimport setCriteria from './../../../../utils/set-criteria';\nimport checkLinks from './../../../../utils/check-links';\nimport convertToResponse from './../../../../utils/convert-to-response';\nimport { MODULE_NAME } from './../../constants';\nimport {\n  internalErrorPromise,\n  schemaNotFoundError,\n  schemaNotInstanceSchemaClassError\n} from '../../../../errors';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: 'find-one' };\n\nexport default (app, middleware, plugin) => (msg) => buildFindOne(app, middleware, msg);\n\nexport function buildFindOne(app, middleware, msg) {\n  let { schema, criteria = {}, options = {} } = msg;\n  const { transaction, outer = false, fields } = options;\n\n  if (!schema) {\n    return Promise.reject(schemaNotFoundError(ERROR_INFO));\n  }\n\n  if (!(schema instanceof Schema)) {\n    return Promise.reject(schemaNotInstanceSchemaClassError(ERROR_INFO));\n  }\n\n  return new Promise((resolve, reject) => {\n    let __fields = schema.getMyFields(fields);\n    criteria = schema.getMyCriteriaParams(criteria);\n\n    if (isEmpty(criteria)) {\n      return resolve(null);\n    }\n\n    let builder = setCriteria(app, middleware(schema.tableName), criteria, reject)\n      .select(...__fields)\n      .limit(1);\n\n    if (outer) {\n      // Если кто-то сам хочет запускать запрос - вернем builder\n      // Возвращаем как объект - иначе происходит исполнение данного builder'a\n      return resolve({ builder });\n    }\n\n    // Иначе вызовем его выполнение\n    builder\n      .then(([ result ]) => new Promise(async resolve => {\n        if (!result) {\n          return resolve(result);\n        }\n\n        const record = convertToResponse(schema, __fields)(result);\n\n        resolve(await loadAndAssignLink(msg, schema, record));\n      }))\n      .then(resolve)\n      .catch(internalErrorPromise(app, ERROR_INFO))\n      .catch(reject);\n  });\n}\n\nfunction loadAndAssignLink(msg, schema, record) {\n  const links = checkLinks('one', schema.properties);\n\n  if (!links.keys.length) {\n    return Promise.resolve(record);\n  }\n\n  // Получаем все связанные объекты и сетим их себе\n  return Promise\n    .all(links.keys.map(propertyName => msg\n      .act({ ...links[ propertyName ], criteria: { id: dot.pick(propertyName, record) } })\n      .then(link =>\n        Object.assign(record[ propertyName.slice(0, propertyName.lastIndexOf('.')) ], link)\n      ))\n    )\n    .then(() => record);\n}"]}