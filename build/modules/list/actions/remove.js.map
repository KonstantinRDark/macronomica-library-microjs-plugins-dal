{"version":3,"sources":["../../../../src/modules/list/actions/remove.js"],"names":["buildRemove","ERROR_INFO","module","action","app","middleware","plugin","msg","schema","criteria","options","transaction","outer","fields","__fields","getMyFields","Promise","reject","resolve","getMyParams","builder","tableName","del","returning","then","result","Array","isArray","map","catch"],"mappings":";;;;;QAegBA,W,GAAAA,W;;AAfhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAMA,MAAMC,aAAa,EAAEC,8BAAF,EAAuBC,QAAQ,QAA/B,EAAnB;;kBAEe,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,KAA8BC,GAAD,IAASP,YAAYI,GAAZ,EAAiBC,UAAjB,EAA6BE,GAA7B,C;;AAE9C,SAASP,WAAT,CAAsBI,GAAtB,EAA2BC,UAA3B,QAAgF;AAAA,MAAvCG,MAAuC,QAAvCA,MAAuC;AAAA,2BAA/BC,QAA+B;AAAA,MAA/BA,QAA+B,iCAApB,EAAoB;AAAA,0BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,gCAAN,EAAM;AAAA,QAC7EC,WAD6E,GACtCD,OADsC,CAC7EC,WAD6E;AAAA,uBACtCD,OADsC,CAChEE,KADgE;AAAA,QAChEA,KADgE,kCACxD,KADwD;AAAA,QACjDC,MADiD,GACtCH,OADsC,CACjDG,MADiD;;AAErF,QAAMC,WAAWN,OAAOO,WAAP,CAAmBF,MAAnB,CAAjB;;AAEA,MAAI,CAACL,MAAL,EAAa;AACX,WAAOQ,QAAQC,MAAR,CAAe,iCAAoBhB,UAApB,CAAf,CAAP;AACD;;AAED,MAAI,EAAEO,kCAAF,CAAJ,EAAiC;AAC/B,WAAOQ,QAAQC,MAAR,CAAe,+CAAkChB,UAAlC,CAAf,CAAP;AACD;;AAED,SAAO,IAAIe,OAAJ,CAAY,CAACE,OAAD,EAAUD,MAAV,KAAqB;AACtCR,eAAWD,OAAOW,WAAP,CAAmBV,QAAnB,CAAX;;AAEA,QAAI,sBAAQA,QAAR,CAAJ,EAAuB;AACrB,aAAOS,QAAQ,IAAR,CAAP;AACD;;AAED,QAAIE,UAAU,2BAAYhB,GAAZ,EAAiBC,WAAWG,OAAOa,SAAlB,CAAjB,EAA+CZ,QAA/C,EAAyDQ,MAAzD,EACXK,GADW,GAEXC,SAFW,CAEDT,QAFC,CAAd;AAGA;;;;;;AAMA,SAAI,mBAAmBF,KAAvB,EAA8B;AAC5B;AACA;AACA,aAAOM,QAAQ,EAAEE,OAAF,EAAR,CAAP;AACD;;AAEDA,YACGI,IADH,CACQC,UAAU;AACd,UAAG,CAACA,MAAJ,EAAY;AACV,eAAOA,MAAP;AACD;;AAED,UAAIC,MAAMC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACzB,eAAOA,OAAOG,GAAP,CAAW,iCAAkBpB,MAAlB,EAA0BM,QAA1B,CAAX,CAAP;AACD;;AAED,aAAO,iCAAkBN,MAAlB,EAA0BM,QAA1B,EAAoC,CAAEW,MAAF,CAApC,CAAP;AACD,KAXH,EAYGD,IAZH,CAYQN,OAZR,EAaGW,KAbH,CAaS,kCAAqBzB,GAArB,EAA0BH,UAA1B,CAbT,EAcG4B,KAdH,CAcSZ,MAdT;AAeD,GArCM,CAAP;AAsCD","file":"remove.js","sourcesContent":["import isEmpty from 'lodash.isempty';\nimport Schema from './../../../utils/schema';\nimport setCriteria from './../../../utils/set-criteria';\nimport convertToResponse from './../../../utils/convert-to-response';\nimport { MODULE_NAME } from './../constants';\nimport {\n  internalErrorPromise,\n  schemaNotFoundError,\n  schemaNotInstanceSchemaClassError\n} from '../../../errors';\n\nconst ERROR_INFO = { module: MODULE_NAME, action: 'remove' };\n\nexport default (app, middleware, plugin) => (msg) => buildRemove(app, middleware, msg);\n\nexport function buildRemove (app, middleware, { schema, criteria = {}, options = {} }) {\n  const { transaction, outer = false, fields } = options;\n  const __fields = schema.getMyFields(fields);\n\n  if (!schema) {\n    return Promise.reject(schemaNotFoundError(ERROR_INFO));\n  }\n\n  if (!(schema instanceof Schema)) {\n    return Promise.reject(schemaNotInstanceSchemaClassError(ERROR_INFO));\n  }\n\n  return new Promise((resolve, reject) => {\n    criteria = schema.getMyParams(criteria);\n\n    if (isEmpty(criteria)) {\n      return resolve(null);\n    }\n\n    let builder = setCriteria(app, middleware(schema.tableName), criteria, reject)\n      .del()\n      .returning(__fields);\n    /*\n    if (transaction) {\n      // Если передали внешнюю транзакцию - привяжемся к ней\n      builder = builder.transacting(transaction);\n    }\n    */\n    if (/*transaction || */outer) {\n      // Если передали внешнюю транзакцию или кто-то сам хочет запускать запрос - вернем builder\n      // Возвращаем как объект - иначе происходит исполнение данного builder'a\n      return resolve({ builder });\n    }\n\n    builder\n      .then(result => {\n        if(!result) {\n          return result;\n        }\n\n        if (Array.isArray(result)) {\n          return result.map(convertToResponse(schema, __fields));\n        }\n\n        return convertToResponse(schema, __fields)([ result ]);\n      })\n      .then(resolve)\n      .catch(internalErrorPromise(app, ERROR_INFO))\n      .catch(reject);\n  });\n}"]}