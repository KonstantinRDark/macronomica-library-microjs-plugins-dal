{"version":3,"sources":["../../../../src/actions/tree/utils/set-parent-leaf-true.js"],"names":["setParentLeafTrue","middleware","schema","parentId","Promise","resolve","then","count","id","leaf"],"mappings":";;;;;kBAGwBA,iB;;AAHxB;;AACA;;AAEe,SAASA,iBAAT,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,QAAhD,EAA0D;AACvE,MAAI,CAACA,QAAL,EAAe;AACb,WAAOC,QAAQC,OAAR,EAAP;AACD;;AAED,SAAO,uBAAWJ,UAAX,EAAuBC,MAAvB,EAA+B,EAAEC,kBAAF,EAA/B,EACJG,IADI,CACC,gBAAe;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AACnB,WAAOA,UAAU,CAAV,GACH,yBAAYN,UAAZ,EAAwBC,MAAxB,EAAgC,EAAEM,IAAIL,QAAN,EAAgBM,MAAM,KAAtB,EAAhC,EAA+D,EAAEA,MAAM,IAAR,EAA/D,CADG,GAEHL,QAAQC,OAAR,EAFJ;AAGD,GALI,CAAP;AAMD","file":"set-parent-leaf-true.js","sourcesContent":["import {buildCount} from './../../count';\nimport {buildUpdate} from './../../update';\n\nexport default function setParentLeafTrue (middleware, schema, parentId) {\n  if (!parentId) {\n    return Promise.resolve();\n  }\n\n  return buildCount(middleware, schema, { parentId })\n    .then(({ count }) => {\n      return count === 0\n        ? buildUpdate(middleware, schema, { id: parentId, leaf: false }, { leaf: true })\n        : Promise.resolve();\n    });\n}"]}