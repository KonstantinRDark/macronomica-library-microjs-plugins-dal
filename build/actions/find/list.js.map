{"version":3,"sources":["../../../src/actions/find/list.js"],"names":["buildFindList","middleware","micro","plugin","schema","criteria","options","sql","fields","sort","limit","offset","manyLinks","properties","Promise","resolve","reject","builder","tableName","getMyParams","select","getMyFields","orderKey","orderDirection","split","length","includes","toLowerCase","orderBy","toSQL","then","result","map","forEach","name","item","row","catch","code","message","error","detail"],"mappings":"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","file":"list.js","sourcesContent":["import isString from 'lodash.isstring';\nimport isNumber from './../../utils/is-number';\nimport setCriteria from './../../utils/set-criteria';\nimport checkArray from './../../utils/check-array';\nimport { ERROR_FIND_LIST } from './../constants';\n\nexport default (middleware, micro, plugin) =>\n  (schema, criteria = {}, options) =>\n    buildFindList(middleware, schema, criteria, options);\n\nexport function buildFindList(middleware, schema, criteria = {}, options = {}) {\n  let {\n    sql = false,\n    fields,\n    sort = 'id',\n    limit,\n    offset,\n  } = options;\n\n  const manyLinks = checkArray(schema.properties);\n\n  return new Promise((resolve, reject) => {\n    let builder = setCriteria(\n      middleware(schema.tableName),\n      schema.getMyParams(criteria),\n      reject\n    ).select(...schema.getMyFields(fields));\n\n    if (sort) {\n      let orderKey;\n      let orderDirection;\n\n      if (isString(sort)) {\n        sort = sort.split(' ');\n\n        if (sort.length === 2) {\n          orderKey = sort[ 0 ];\n          orderDirection = [ 'asc', 'desc' ].includes(sort[ 1 ].toLowerCase())\n            ? sort[ 1 ].toLowerCase()\n            : 'asc';\n        } else {\n          orderKey = sort;\n          orderDirection = 'asc';\n        }\n      }\n\n      if (orderKey && orderDirection) {\n        builder = builder.orderBy(orderKey, orderDirection);\n      }\n    }\n\n    if (limit && isNumber(limit)) {\n      builder = builder.limit(limit);\n    }\n\n    if (offset && isNumber(offset)) {\n      builder = builder.offset(offset);\n    }\n\n    if (sql) {\n      resolve(builder.toSQL());\n    } else {\n      builder\n        .then((result = []) => {\n          if (manyLinks.length > 0) {\n            result = result.map(item => {\n              manyLinks.forEach(name => {\n                if (name in item && !!item[ name ]) {\n                  item[ name ] = item[ name ].split(',');\n                }\n              });\n\n              return item;\n            });\n          }\n\n          resolve(result.map(row => ({ ...row })));\n        })\n        .catch(error => {\n          reject({\n            code   : ERROR_FIND_LIST,\n            message: error.detail || error.message.split(' - ')[ 1 ]\n          });\n        });\n    }\n  });\n}"]}